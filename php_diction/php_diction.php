<?
###################################################################################
                     /////////////////////////////   PHP 백과사전 교육용 스크립트 ////////////////////////////////////////////
###################################################################################
/*******************************************************************************************************************
<English vr>
- The Program is copyrighted by Jimmy and may not be used for any purpose other than educational.
- If you want to use another intent, contact the copyright holder.
* Copyright : Jimmy Park  by    email: pjws0321@gmail.com  or  pjws0321@naver.com
- Unauthorized use may result in disadvantage
==========================================================================
<korean vr>
- 본 프로그램 저작권은 Jimmy Park 에게 있으며 교육용 외에는 본 프로그램을 사용 할 수 없습니다.
- 교육용 외 다른 용도로 사용을 원할시 저작권자에게 문의 하시길 바랍니다.
* Copyright : Jimmy Park  by    email: pjws0321@gmail.com  or  pjws0321@naver.com
- 무단 도용시 불 이익을 받을 수 있습니다.
**********************************************************************************************************************/

/////////////////////////////////////////   (쩡원의PHP  기초편 스크립트)  //////////////////////////////////////////
/////  ----------  본 스크립트를 서버에 웹 브라우저에서 실행하지 마세요(오류가 뜹니다.)  ---------- //////



/* /////////////////////////////////////////////////     [[ MySql Query(쿼리문) ]]  //////////////////////////////////////////////////////////////////
mysqli은 PHP버전 5.0,  MYSQL4.1 부터 사용을 권장하고 있다.
MySQLi는 MySQL보다 최고40% 속도가 빠르고 MySQL상위 버전과의 호환성이 우수합니다.
혹시 php.ini설정 파일에서 extension=php_mysqli.dll 앞에 세미콜론을 제거해야 MySQLi 확장을 사용할 수 있습니다.
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */
header("content-type:text/html; charset=UTF-8");  //현재 문서의 코드를 PHP로 만 작성한다면  이러한 함수를 사용한다.
// header 함수는 php코드 맨 상단에 위치하게 한다.  만일 header 함수를 페이지 내에서 두번을 사용하면 오류가 난다.  


//////////////////////////////////////////   DB 컨넥트  //////////////////////////////////////////////
       $connect = new mysqli($host_name, $db_user, $db_pw, $db_name);
	   if($connect->connect_errno){
      echo "<font color='red'>연결에 실패 하였습니다.</font>".$connect->connect_error.'<br>';
	  }

///또는 이렇게 사용 할수 있습니다.
      $connect = mysqli_connect($host_name,$db_user,$db_pw,$db_name);
	  if(!$connect)die("<font color=red''>연결에 실패 하였습니다.</font>".mysqli_error());


////  문자열 변경   /////
if(! $connect->set_charset('utf8'))  //(php >= 5.0.5)
	{ echo '[문자열변경실패] : '.$connect->connect_error;}

/************************************************************************************
//MYSQL에서는 
 mysql_select_db($db_name,$connect);  
이부분이 한줄더 삽입되어야 한다.
하지만 MYSQLi 는 mysqli_connect() 속성에 디비이름까지 넣어 줌으로써 
mysql_select_db 부분이 생략이 된다.
*****************************************************************************/


///////////////   DB쿼리문으로 데이터 가지고 오기   //////////////////////// 
$query = "select * from bbs1 where ctg='a' and ctgs='a01' ";
$result = $connect->query($query);
if(!$query->error){echo "[select실패]", $query->error;}

while($row = $result->fetch_array())
{
 echo mb_substr($row['subject'],0,20,"utf8")."<br>";
}
 mysqli_close($connect);  //객체의 연결을 해제 맨뒤에 사용


//////////  또는 이렇게 사용 ////////////////////////
 $query="select * from member where user_id='$user_id' and no='$no' ";
 $result= mysqli_query($connect, $query);  // 실제 테이블의 쿼리를 보낸다
 $memb=mysqli_fetch_array($result);  //레코드 가지고 오기
 echo $memb[name]".&nbsp; &nbsp;".$memb[addr_1]; 
 echo "<br>";
/* ******************************************************************************************************
$query= member 라는 테이블 전체(* from) 내용에서 필드의 user_id와 사용자의 user_id 같은 결과와
            필드 no와 사용자 no가 같은 결과를 가지고 온다.
 *****************************************************************************************************/  
 

////////////// ///////  반복문 while();  /////// /////// /////////////
// 테이블의 데이터 레코드를 1개 이상을 가지고 올때는 mysqli_fetch_array 반복문(while)을
// 이용해 반복해 줘야 한다.
예)  while($data=mysqli_fetch_array($result)){
	    echo "출력될 내용물 <br>";
		}

/* mysqli_fetch 종류는 아래와 같다 
- mysqli_fetch_row    는 숫자 색인값(index 번호 해당 칼럼의 순번)으로 결과를 얻는다   
- mysqli_fetch_assoc 는 컬럼명 으로 결과를 얻는다 
- mysqli_fetch_array   는 위에 둘다 사용가능

 // mysqli_num_rows : 레코드 총 수를 알아낸다.
  */


/* ====  query문의 명령어 정리 ====
*              : 테이블의 모든 column을 불러 온다
limit         : 총가지고 올수 있는 수 6개 
DISTINCT : 중복되는 행을 제거하는 옵션
alias        : 해당 column에 대해서 다른 이름을 부여할 때 사용.
table_name : 질의 대상 테이블 명
 WHERE : 조건을 걸어준다
 condition : column, 표현식, 상수 및 비교 연산자
 order by : 질의 결과 정렬을 위한 옵션(ASC:오름차순(Default),DESC내림차순)


연산자                                설명
BETWEEN a AND b         a와 b사이의 데이터를 출력.(a, b값 포함)  
IN (list)                      list의 값 중 어느 하나와 일치하는 데이터를 출력  
LIKE                          문자 형태로 일치하는 데이터를 출력(%, _사용)  
IS NULL                      NULL값을 가진 데이터를 출력 합니다.  
NOT BETWEEN a AND b              a와 b사이에 있지않은 데이터를 출력(a, b값 포함하지 않음)  
NOT IN (list)                 list의 값과 일치하지 않는 데이터를 출력  
NOT LIKE               문자 형태와 일치하지 않는 데이터를 출력  
IS NOT NULL           NULL값을 같지 않는 데이터를 출력  


구분                    설명
LIKE 'A%'         'A'로 시작하는 데이터만 검색 
LIKE '%A'          'A'로 끝나는 테이터들만 검색  
LIKE '%KIM%'     'KIM' 문자가 있는 데이터 들만 검색  
LIKE '%K%I%'     'K' 문자와 'I'문자가 있는 데이터 들만 검색  
LIKE '_A%'          'A'문자가 두 번째 위치한 데이터 들만 검색  
*/

/*============( 컬럼의 값을 합한다. ) ============= */
// 예)
$sql="select sum(컬럼1) as 컬럼1, sum(컬럼2) as 컬럼2 from 테이블이름 ";
 $result= mysqli_query($connect, $sql);  
 $res=mysqli_fetch_array($result);
 echo $res[컬럼명];  //합한 값의 결과가 출력된다.
/*========================================================= */


/*============(중복값 제거: group by 컬럼명 ): 중복값을 제거 함  =============*/
// 예)
select * from bbs_1_comments where user_id!='$member[user_id]' group by user_id

//(중복값 제거: distinct) :TID라는 칼럼의 중복값을 하나로 구분하여  결과를 가지고 옴
/* 예) */  select count(distinct TID) from orderer_list



/*=========  두개 이상의 테이블에서 join(조인)을 이용해 각각의 테이블에서 필드값 가지고 오기 ==============*/
// 양 테이블의 기본키값이 서로 같아야 한다.  //
//예)
$query = "SELECT * from 테이블(1번) as a inner join 테이블(2번) as b on a.컬럼명=b.컬럼명 where $where";
$res = mysql_query($query,$connect);
/************************************************************************************************************
테이블(1번)은 'a'라 칭하고 테이블(2번)은 'b'라 칭한다 
a.컬럼과  b.컬럼을 기본 키값으로 하여 원하는 데이터를 가지고 온다.
LEFT JOIN 
//'일치하는 레코드'와 '테이블1(왼쪽)의 모든 레코드'를 표시합니다.

RIGHT JOIN
//'일치하는 레코드'와 '결합할 테이블2(오른쪽)의 모든 레코드'를 표시합니다.
*******************************************************************************************************************/

/* =========   여러개 테이블에서 레코드 추출하기 UNION(유니온) =============== */
// 서로 다른 키값의 특정 칼럼의 user_id 값을 가지고 올 수 있다.
// 예)
$where = "user_id='$user_id' ";
$query= "SELECT user_id FROM member where $where UNION SELECT user_id FROM member_out  where $where";
 mysqli_query($connect, "set names utf8");
 $result=mysqli_query($connect, $query); 
 $mem = mysqli_fetch_array($result);




/* =========   레코드에 최대값 가져오기 max  =============== */
//  max를 이용하여  최대값의 레코드를 가져올 수 있습니다.
// 예)
	$query = "select 칼럼1,  max(칼럼2) as 칼럼2예칭명  from 테이블명    GROUP BY  칼럼1 order by 칼럼1 asc ";


/* ///////////////   I N 문을 사용하여 작성 /////////////////////// */
// 예)
	$query ="SELECT *  FROM 테이블A as A  
                 WHERE A.칼럼1
                in (select B.칼럼2 from 테이블B as B)
				GROUP BY 칼럼2 order by 칼럼2 asc ";



/* ///////////////    EXISTS문을 사용하여 작성 //////////////////////   */
// 예)
	$query ="SELECT A.*  FROM 테이블A as A  
                  WHERE  EXISTS (SELECT B.*  FROM 테이블B as B  
                  WHERE A.칼럼1 =B.칼럼2)
				GROUP BY 칼럼1 order by 칼럼1 asc "; 






/* ==================  문자열 검색 =====================  */
if($_theme){
	$tmp='theme';  
	if($tmp) {$where="$tmp like '%$_theme%'"; }
	}
$query="select * from member where user_id='$user_id'  where $where ";

/*
where: 조건은 변수의 $where이다:   $where은 theme($tmp) 라는 필드의 값에서
          사용자가 검색하려는 $_theme 변수의 문자열을 추출해 온다.
*/



/////////////////////////////  테이블 전체 레코드 수 구함  /////////////////////////////
$query = "select  *  from 테이블이름";
$result = mysqli_query($connect, $query);  
$total_article=mysqli_num_rows($result); 
echo "전체레코드:". $total_article;


///////////////////////////////////   DB쿼리문 데이터 입력 ///////////////////////////////////////////////////// 
 $query="insert into 테이블명 
                       (필드명1, 필드명2, 필드명3, 필드명4, 필드명5)
			  values('필드명1값', '필드명2값', '필드명3값', '필드명4값', '필드명5값')";
 mysqli_query($connect, "set names utf8");   // 데이터를 utf8 형식으로 보낸다.
 mysqli_query($connect, $query);                 // 실제 테이블의 쿼리를 보낸다





/////////////////////////////////////////  데이터-수정 ////////////////////////////////////////
$query="update member set 
             name='$name',
			 user_id='user_id',
			 addr1='$addr_1'
             where no='$no'  ";
 mysqli_query($connect, $query);  // 실제 테이블의 
/*
주의1: addr1='$addr_1' 맨뒤어 컬럼값뒤에는 콤마를 찍지 않는다.
주의2: where 조건을 잘못주면 전체의 컬럼의 값이 변경 될수 있다
*/


/////////////////////////////  데이터-삭제 /////////////////////////////
$query="delete from member 
             where no='$no'  ";
 mysqli_query($connect, $query);  // 실제 테이블의 
/*
주의: where 조건을 잘못주면 전체의 데이터가 삭제 될 수 있다.
*/


/*/////////////////////////////////////////////////////////////////////////
메시지를 나타내고 해당페이지로 이동하는 자바스크립트
<script>
        window.alert("해당글이 삭제 되었습니다.");
	    location.href='list.php'; 
 </script>
 ////////////////////////////////////////////////////////////////////// */




////////////////////////// ==테이블 구도 보기======= ////////////////////////////
//(예) 
$sql="desc member";  //테이블 구도 보기
$result=mysqli_query($connect,$sql);
$_no=0;
while($row=mysqli_fetch_row($result)){  
echo $_no.".&nbsp; &nbsp;".$row[0]."<br>";
$_no++;
}
///////////////////////////////////////////////////////////////////////////////////////////


 /////////////////////////////// SQL암호화로 변경하기 ///////////////////////////////
 $f1="select password('$a') as pw"
$ff = mysqli_query($connect,$f1);
$rt = mysqli_fetch_array($ff);
echo $rt['pw'];
////////////////////////////////////////////////////////////////////////////////////////////



/////////////////////////////  날짜및 이용자 IP ////////////////////////////////////////
 $regdate=date("Ymd",time()); //날짜
 $ip = getenv("REMOTE_ADDR");  //ip주소
/*============================================
날짜및 IP를 이와 같이 변수에 담에 위 쿼리에 함께 넣어 준다 
위 코드는 반듯이 쿼리문 위에 있어야 한다.
==============================================*/
////////////////////////////////////////////////////////////////////////////////////////////////////





/* *************************** //////////////   [IF 문]   ////////////////   ****************************
if문은 조건문으로 참 거짓을 구분하는 것이다.
만약에   $A 라는 변수에 1이라는 값이 있다면 'OK' 라는 것을 출력하고
1이라는 값이 없다면 'NO' 라고 출력해보자.

예) if($A==1){echo 'OK';
            }else{ echo 'NO';
			}

그럼 만약에 $A 라는 변수 값이 '1'면 '1과 같습니다.' 를 출력 하고 $A값이 1보다 크면 '1보다 큽니다.' 라고 출력해보자
예) 
$A='2';
if($A==1){echo '1과 같습니다.';
            }else if($A>1){ echo '1보다 큽니다.';
			}
결과값: 1보다 큽니다.
-----------------------------------------------------------------------------------------------
a>b : a가 b보다 크다. (a가 크다)
a<b : a가 b보다 작다. (b가 크다)
==  :  서로 같다 라는 뜻.
=   :  는 이다.
!=  :  서로 같지 않으면
a >= b : a가 b보다 크거나 같을때
a <= b : a가 b보다 작거나 같을때
a == b and c =! d  : a와 b가 서로 같고 and(그리고)  a와b가 서로 다른것
a == b or c =! d  : a와 b가 서로 같거나 or(포함한)  a와b가 서로 다른것
                         or(포함한) 대신 ||(포함한)을 사용 할 수있다.
---------------------------------------------------------------------------------------------------

////// 데이터 타입 확인 함수 var_dump(); //////
// 참인경우(true)로 표기 되고 거짓인경우(false)표기된다.
var_dump( 1 > 2);  //1이 크다 (이건 거짓이 되겠죠)
echo "<br>";
var_dump( 3 < 4 );  //4가 커 (이건 참이됩니다.)
echo "<br>";
var_dump(1);  //숫자가 들어가있기 때문에 (int 1)형식이라 표기됩니다.
echo "<br>";
var_dump(hi); // 이건 텍스트가 들어갔기 때문에 string 형식 
echo "<br>";


-------------------- [조건의 문자열 찾기 preg_match ]  ----------------------------
하나의 변수 값의 원하는 문자를 찾아 낼수 있다.

$ctg='aefg';
if(preg_match('/a|b|c/',$ctg)) {
     echo "조건 값에 포함됩니다.";
     }else{ echo "조건값에 포함되지 않습니다."; }

	실행결과: 조건 값에 포함됩니다.
*************************************************************************************************/



/* *************************** //////////////  switch()  ////////////////   ****************************/
 // switch() 함수도 if문가 비슷하지만 복잡한 조건을 줘야 할때 이렇게 아래와 사용 할 수 있다.
$fruit = "apple";
    switch( $fruit ){
        case ('apple'):   {   echo "사과는 맛있습니다..";  } break;
        case "orange" :{   echo "오랜지는 맛있습니다."; } break;
        case "banana" :{ echo "바나나는 맛있습니다."; } break;       
		default :{echo "결과값이 없습니다."; }
    }

echo "<br><br>";

$age = 22;
    switch( $age ){
        case ( $age >= 10 && $age < 20 ) : {  echo "당신은 10대입니다.";  } break;
        case ( $age >= 20 && $age < 30 ) :  {  echo "당신은 20대입니다.";  }  break;
        case ( $age >= 30 && $age < 40 ) :  {   echo "당신은 30대입니다.";  }  break;
        default : { echo "당신은 40대 이상입니다.";  }
    }
/* *********************************************************************************************** */

/* *************************** //////////////  ARRAY 배열  ////////////////   *************************** */
$e1= array('토끼','사자','고양이','원숭이','코끼리');     //배열(array)에 들어있는 값을 불러와 보자 
for($i=0; $i<count($e1); $i++){
echo "-".$e1[$i]."<br>";  //배열된건 반복문을 이용해 출력
}

// ==========  연관배열 ========== //
echo "-연관배열:키값으로 인덱스가 연관된 배열- <br>";
$e1= array('1'=>'토끼', '2'=>'사자', '3'=>'고양이', '4'=>'원숭이', '5'=>'코끼리');  
for($i=1; $i<=count($e1); $i++){
echo "-".$e1[$i]."<br>";
}
//----------------------------------------------------------------------//
/////////////////////======- 다중배열 ========////////////////////////
$e2= array(
  "animal"=>array( '1'=>'토끼', '2'=>'사자', '3'=>'고양이', '4'=>'원숭이', '5'=>'코끼리'),
  "fruit"=>array( '1'=>'사과', '2'=>'오랜지', '3'=>'포도', '4'=>'바나나', '5'=>'딸기')
  );  
echo "-animal-<br>";
for($i=1; $i<=count($e2['animal']); $i++){
echo "-".$e2['animal'][$i]."<br>";
}
echo "<br>-fruit-<br>";
for($i=1; $i<=count($e2['fruit']); $i++){
echo "-".$e2['fruit'][$i]."<br>";
}
//////////////////////////////////////////////////////////////////////////////////////


//====================  array_column ===========================//
//:다중 배열에서 같은 키를 지니고 있는  키값으로 다른 형태의 키와 키값으로 만들기  
$arrays = array(
    array(
        'key_name1' => 'AA',
        'key_name2' => '사자',
        'key_name3' => '무서운'
    ),
    array(
        'key_name1' => 'BB',
        'key_name2' => '강아지',
        'key_name3' => '예쁜'
    ),
    array(
        'key_name1' => 'CC',
        'key_name2' => '고양이',
        'key_name3' => '귀여운'
    )
);

$arrays_name = array_column($arrays, 'key_name2', 'key_name1');
print_r ($arrays_name);
//------------------------------------------------------------------------------------------------//


//===========  array_key_exists  특정 키 조건 비교  ===============//
if(array_key_exists('콜라',$a2)){
echo "주문하셨습니다.<br>";
}else{
	print "메뉴는 없습니다.<br>";
}
//------------------------------------------------------------------------------------------------------//

//============  in_array() 특정 키값 조건 비교  ============//
if(in_array(8000,$a2)){
print "해당금액이 있습니다.<br>";
}else{
	print "없는 금액입니다.<br>";
}
//-----------------------------------------------------------------------------------------------//

//===========   array_search()  특정 키 찾기  ===========//
if($da=array_search('2500',$a2)){
print "해당금액은 $da 입니다.<br>";
}else{
	print "없는 금액입니다.<br>";
}
//--------------------------------------------------------------------//
//========   array_merge 배열 합치기  =====//
$li1 = ['a', 'b', 'c'];
$li2 = ['d', 'e'];
$li = array_merge($li1, $li2); 

//(결과 예)
foreach ($li as $value){
echo " $value";
}
//------------------------------------------------------------






///////값에 따라 오름차순, 내림차순으로 정렬하는 asort(), arsort() /////////
$age=array("Peter"=>"300", "Ben"=>"200", "Joe"=>"100");
 asort($age); //오름차순
 arsort($age);   //내림차순
foreach ($age as $x=>$x_value){
  echo "Key=" . $x . ", Value=" . $x_value;
  echo "<br>";
}
//--------------------------------------------------------------------------------------------------//

//---------array_splice 특정배열 자르기 -----------//
array_splice($test, 1, 2);
// 배열에서 앞의 두개만 남기고 뒤의 3, 4 잘라내기

# array_splice() 음수를 사용한 예제보기
$test = [1, 2, 3, 4];
array_splice($test, 1, -1);

//실행 결과입니다.//
$test[0] => 1
​​​​​​​$test[1] => 4
/* /////////////////////////////////////////////////////////////////////////////////////////////////////////
************************************************************************************************ */








/* *************************** //////////////   FOR 반복문  ////////////////   *************************** */
$arr= array('토끼','사자','고양이','원숭이','코끼리');  //배열(array)에 들어있는 값을 불러와 보자 

for($a=0; $a<count($arr); $a++){   //count()를 이용해 FOR문으로 배열속에 들어 있는 값 전체를 가지고 온다. 
echo $arr[$a]."<br>";
}

$data="너구리#고양이#사자#토끼#여우#강아지#호랑이";
$explode = explode("#",$data);   # . 을 기준으로 분리   (explode: 특정문자로부터 분류함수)
for($ips=0; $ips<count($explode);  $ips++ ){
	$a_file[$ips]=$explode[$ips];
        echo  "- ".$a_file[$ips]."<br>"; //출력
} 
/*************************************************************************************************/

//이번경우는 총 45개의 숫자를 1행에 5열로 나열하고 5열보다 크면
//줄바꿈 하여 2행에 5열을 나열 하는 식으로 구현해 보겠습니다.
// 예2)
for($i=0; $i<45; $i++){  
	echo ($i+1);  // 배열은 0부터 시작하기때 1을 더해준다.
	 if(($i+1)%5==0){ echo "<br>";  //$i 값(45)을 5씩 나누고 5이상이면 즐바꿈을 한다.
	 }
}



/* *************************** //////////////   WHILE 반복문  ////////////////   ****************************/
$aa= array('토끼','사자','고양이','원숭이','코끼리');  //배열(array)에 들어있는 값을 불러와 보자 
$i=0;
while($i<count($aa)){
	echo $aa[$i]."<br>"; 
$i++;
}
/*************************************************************************************************/


/* *************************** //////////////   do while 반복문 ////////////////   ****************************/
$x=1;
do{
	echo "do while문의 반복 횟수 : $x <br>";
	$x++;
} while($x <=5);
/////////    개인적으로 많이 쓰이지 않는 함수이다. ////////////
/*************************************************************************************************/



/* *************************** //////////////   foreach()  반복문 ////////////////   ****************************/
:반복문의 일종이며 순차배열 연관배열의 값을 꺼내 사용할 수 있다.  (for문과 비슷)

//foreach 순차배열
예)
$a = array("Banana","Orange","Apple");
foreach ($a as $value){
echo $value."<br>";
}

//foreach 연관배열
예)
$a = array(바나나=>"Banana",오랜지=>"Orange",사과=>"Apple");
foreach ($a as $key=>$value){
echo "$key: $value";
}

예)
foreach($attention as $value){$Kattention .=$value."/"; }
echo $Kattention;
/**********************************************************************************/


/* *************************** //////////////   function()  ////////////////   ****************************/
// function() 함수는 어떠한 동작을 담고 있다가 호출하면 그 동작을 실행한다.
/* function 함수이름(){
	      동작할 코드
}
호출 echo 함수이름();
*/
//이렇게 이루어 진다. 그럼 사용 예를 한번 보자.
// 예)
 function fnames($a, $b){  //  fnames라는 평션함수는 매개변수$a, $b값을 받아 온다.
	     echo ($a + $b);  // 받아온 매개변수의 값을 플러스 하라는 명령을 준다.
}
		 fnames(10, 5);  //10하고5라는 값을 주고 출력해보면
//결과는 function 에서 10,5와 값을 더하도록 명령을 줬기 때문에 15라는 결과 값이 나온다. 

//  이번에는 return 을 사용해서 결과를 얻어 보자.
// return: 값은 반환시키는 명령어 인데요 먼저 예제를 보겠습니다. 
// 예)
function test($a) {
// $a 가 1번이면 호랑이 2번이면 코끼리 
// 다른값이면 동물이 아님
if($a == 1){  
return  "호랑이" ;
}elseif($a==2){ 
  return "코끼리";
}
return "동물이 아님" ;  
}

$s = 1;
echo $result = test($s);
///  만일 위 코드에서 return을 사용하지 않으면 조건문이 작동을 하지 않아 
/// 결과문에 3가지 조건의 값이 다 나타 납니다.  



/*======================= 시간,날짜 DATE =======================*/
date();  time(); strtotime(); mktime(); //함수를 알아보자  
time() :  //1970년 1월1일 0시0분0초의 기준으로 시간을 나타내는 프로그램 형식의 날짜입니다.
date() : //데이터 형식으로 2019-01-01 12:01:01 이런식으로 나타는 형식이다.
strtotime() ://특정시간을 나타 낼때 쓰인다.
mktime() : //특정시간을 구할 때 쓰인다.

//예)  
date("Y-m-d H:i:s");  현제 날짜 시간 표기  // 2019-01-01 12:01:01

//// strtotime()  ///
//예)
     $lastday=strtotime("last day");        // 하루전 데이터   //  time형식으로 (1552240377 표기)
    $date=date('Y-m-d H:i:s',$lastday);  // time형식을 데이터 형식으로 바꾼다 2019-01-01 12:01:01


/// mktime(메이크 타임)  /////
 $mktime= mktime(2,12,0,03,12,2019);  //시간,분,초,월,일,년도 순서로 나열
 $date2=date("Y-m-d H:i:s", $mktime);   // time 형식으로 시간을 데이터 형식의 시간으로 바꾼다.


/**********************************************************************************************************
--- 일 ---
d  :  일, 앞에 0이 붙는 2 숫자  [ 01에서 31 ]
D  :  요일 글자 표현, 3 문자 [ Mon에서 Sun ]
j  :  앞에 0이 붙지 않는 일 [ 1에서 31 ]
l  :  (소문자 'L') 요일의 완전한 글자 표현 [ Sunday에서 Saturday ]
N  :  요일의 ISO-8601 숫자 표현 (PHP 5.1.0에서 추가) [ 1(월요일)에서 7(일요일) ]
S  :  일 영어 접미사, 2 문자 [ st, nd, rd, th. j와 같이 사용하기 좋음. ]
w  :  요일 숫자 표현 [ 0(일요일)에서 6(토요일) ]
z  :  해당 연도 일차 [ (0에서 시작) 0에서 365 ]

--- 주 ---
W  :  ISO-8601 주차, 주는 월요일에 시작 (PHP 4.1.0에서 추가) [ 예시: 42 (그 해의 42번째 주) ]

---월 ---
F  :  January나 March 같은 월의 완전한 글자 표현 [ January에서 December ]
m  :  0이 붙는 월 숫자 표현 [ 01에서 12 ]
M  :  월의 축약 글자 표현, 3 문자 [ Jan에서 Dec ]
n  :  0이 붙지 않는 월 숫자 표현 [ 1에서 12 ]
t  :  주어진 월의 일 수 [ 28에서 31 ]

--- 연 ---
L  :  윤년 여부 [ 윤년엔 1, 그 외엔 0 ]
o  :  ISO-8601 연도. Y와 같지만, ISO 주차(W)가 전해나 다음해에 해당하면, 그 연도를 사용합니다. (PHP 5.1.0에서 추가) [ 예시: 1999나 2003 ]
Y  :  연도의 완전한 숫자 표현, 4 숫자 [ 예시: 1999나 2003 ]
y  :  도의 두 숫자 표현 [ 예시: 99나 03 ]

--- 시간 ---
a  :  오전과 오후의 소문자 [ am 또는 pm ]
A  :  오전과 오후의 대문자 [ AM 또는 PM ]
B  :  스와치 인터넷 시간 [ 000에서 999 ]
g  :  0이 붙지 않는 12시간 형식 시 [ 1에서 12 ]
G  :  0이 붙지 않는 24시간 형식 시 [ 0에서 23 ]
h  :  0이 붙는 12시간 형식 시 [ 01에서 12 ]
H  :  0이 붙는 24시간 형식 시 [ 00에서 23 ]
i  :  0이 붙는 분 [ 00에서 59 ]
s  :  초, 0이 붙음 [ 00에서 59 ]
u  :  마이크로초 (PHP 5.2.2에서 추가) [ 예시: 54321 ]

--- 시간대 ---
e  :  시간대 식별자 (PHP 5.1.0에서 추가) [ 예시: UTC, GMT, Atlantic/Azores ]
I  :  (대문자 i) 일광 절약 시간 여부  [ 일광 절약 시간이면 1, 아니면 0 ]
O  :  그리니치 시간(GMT)과 시차 [ 예시: +0200 ]
P  :  시와 분 사이에 콜론이 들어가는 그리니치 시간(GMT)과 차이 [ 예시: +02:00 ]
T  :  시간대 축약어 [ 예시: EST, MDT ... ]
Z  :  시간대 오프셋 초. UTC 서쪽은 항상 음수, UTC 동쪽은 항상 양수 [ -43200에서 50400 ]

--- 날짜/시간 표현 ---
c  :  ISO 8601 날짜 (PHP 5에서 추가) [ 2004-02-12T15:19:21+00:00 ]
r  :  ≫ RFC 2822 형식 날짜 [ 예시: Thu, 21 Dec 2000 16:01:07 +0200 ]
U  :  유닉스 에포치(January 1 1970 00:00:00 GMT)부터 초수 [ time() 참조 ]
*********************************************************************************************** */

 /* ----------------  (예제) ----------------- */  
echo "date형식의 현재 날짜:".date("Y-m-d H:i:s");
echo "<br>";
echo "time형식의 현재 날짜: ". time();  //1970년 1월1일 0시0분0초의 기준으로 시간을 나타내는 프로그램 형식의 날짜입니다. 
echo "<br><br>";

$lastday=strtotime("last day");  //하루전
echo "하루전 날짜 :".$lastday."<br>";
$date=date('Y-m-d H:i:s',$lastday);  //하루전의 date날짜
echo "하루전의 date날짜 :". $date."<br>";


echo "<br>";
echo "오늘 : ". $nowday=strtotime("now"); //오늘
echo "<br>";
$dates=date('Y-m-d H:i:s',$nowday);  //하루전의 date날짜
echo "date오늘날짜 :". $dates."<br>";

echo "<br><br>";


/// mktime(메이크 타임)
 $mktime= mktime(2,12,0,03,12,2019);  //2019-3-12 02:12:00
 $date2=date("Y-m-d H:i:s", $mktime);
 echo $date2;

echo "<br><br>";


$year = date('Y');        // 당해
$month = date('m');   // 당월
$day = date('d');         // 당일

echo "1년 전 :". date("Y-m-d", mktime(0,0,0,$month,$day,$year-1));   // 결과)    2017-11-20



/* *************************** //////////////////   iconv ////////////////   ****************************
대부분의 인코팅  UTF8 형식이라면 문제가 없는데 EUC 형식의 인코팅을 사용하게 되면
문자열 인코팅 변환이 필요 합니다. 그럴대는 아래와 같은 iconv() 함수를 이용 할 수 있습니다.
예)  iconv('euc-kr','utf-8',$subject);  //euc-kr 문자를 utf-8문자로 변경;
*********************************************************************************************/


/* *************************** //////////////   session 세션  등록 삭제 ////////////////   ****************************/
session_start();  //세션을 사용하기 위해 페이지 맨 상단에 세션시작을 선언한다.
$_SESSION["user_name"] = "세션값";  // 세션에 등록한다.
print_r($_SESSION);  //등록된 세션을 출력한다.
unset($_SESSION["user_name"]);  //등록된 세션을 삭제한다.
session_destory();  //세션을 종료한다 .  굳이 이건 사용 안해도 됩니다.
/*********************************************************************************************/


/* *************************** //////////////   setcookie 쿠키  등록 삭제 ////////////////   ****************************/
// 사용방법은: setcookie("쿠키이름",'저장할내용',유효시간, "/"); 
// 예) 
setcookie("쿠키이름",'저장할내용',time()+60*60*24*7, "/");  //쿠키는 7일동안 보관되며 7일(60*60*24*7)이 지나면 삭제됩니다.
echo $_COOKIE['쿠키이름'];  //  이렇게 쿠키를 불러 올 수 있습니다.
setcookie("쿠키이름",'',time()-1); //저장된 쿠키를 삭제합니다.
/*********************************************************************************************************************/

/* ********** //session_cache_limiter();  //캐쉬보존을 하기 위한 함수 //////////// *************/
// /폼값의 캐쉬 유지하고 싶을 때 사용 // 만료된 페이지 에러방지 
// 사용예)
session_cache_limiter("private_no_expire");  //session_start 함수 위에 사용
/*
session_cache_limiter("private_no_expire"); //폼값을 유지하고 싶을 때 사용 // 만료된 페이지 에러방지 
session_cache_limiter(""); // Cache(캐시)를 나타나게 하지 않는다.
session_cache_limiter("nocache, must-revalidate");// Cache(캐시)를 나타나게 하지 않는다.
//PHP에서 session_cache_limiter()에 쓸 수 있는 것은 public, private, no-cache뿐이다.
//(Ver. 4.2.0부터 private와 유사한 private_no_expire 추가되었음.)
*/


/* *************************** //////////////  fopen()  파일 읽기 / 쓰기 / 수정  ////////////////   ****************************
 // [fopen] 파일을 생성 또는 열기 
 // [is_writable] 파일 일기쓰기 권한 확인
 //[feof] 파일 포인터가 파일의 끝(EOF)에 도달했거나 에러가 발생하면 true, 아니면 false반환
//[fgets]  length-1byte만큼 읽어들이고 반환. 다 읽기전에 개행문자나 EOF를 만나면 읽기 중단 (한줄만 읽어옴)
////[substr]   0부터5까지의 길이값이 'POWER'단어와 같다면 POWER란 단어 뒤에 '='표기까지를 포함해
                  //그 후의 내용을 줄바꿈 되기 전까지 수정을 하고 줄바꿈을 한다. 
// [fwrite] 저장 할 내용
// [fread] 글자수  / 파라미터의 넣은 글자 수만 읽어 온다.
// [feof] 포인터가 파일의 마지막을 가릴킬때까지 계속 읽어 온다.
// [fclose]  //닫기

----------------------------------------  fopen 함수의 속성값 --------------------------------------------
 r    : 읽기 전용,   파일의 시작,  파일 내용 보존 // 파일이 존재 하지 않으면 NULL을 리턴
 r+  : 읽고 쓰기, 파일의 시작, 파일 내용 보존
 w   : 쓰기 전용,  파일의 시작,  파일 내용 삭제 없으면 새로 생성
 w+ : 읽고 쓰기,  파일의 시작,  파일 내용 삭제 없으면 새로 생성
 a   : 쓰기 전용, 파일의 끝,  파일 내용 보존 없으면 새로 생성
 a+ : 읽고 쓰기,  파일의 끝,  파일 내용 보존 없으면 새로 생성
 x   : 쓰기 전용,  새로운 파일 생성, 파일이 존재하면 false 리턴 그리고 에러 남 
 x+ :  읽고 쓰기, 새로운 파일 생성, 파일이 존재하면 false 리턴 그리고 에러 남  
 ------------------------------------------------------------------------------------------------------------------

 예제)
$logFileName = date("Ymd"); //파일명 앞부분
$logFileName .= "_login.txt"; //파일명 뒷부분
$logFile = fopen($logFileName, "a");  //만들어진 파일명으로 생성 혹은 열기
$now = date("Y-m-d H:i:s");   //현재시간 가져오기
$text = $now."|"."로그인!!";     //현재시간과 메세지로 구성한 로그 한줄 입력!!
fwrite($logFile, $text."\r\n");   //작성
fclose($logFile);                   //닫기
*********************************************************************************************/


/* *************************** //////////////  파일복사 파일 삭제  ////////////////   ****************************/
/*
- [copy] 파일을 복사 한다.
- [file_exists] 특정파일이 있는지 확인
- [unlink] 파일을 삭제 한다.
*/

//예제)
// 원복파일을 이동시킵니다.
$oldfile = './temp_data/'.$a_file[$ips];  // 원본파일
$newfile = './data/'.$a_file[$ips]; // 복사파일

  //실제 존재하는 파일인지 체크..
   if(file_exists($oldfile)) {
	   if(!copy($oldfile, $newfile)) {  //파일복사 
	   } else if(file_exists($newfile)) {
		   // 복사에 성공하면 원본 파일을 삭제합니다.
       if(!@unlink($oldfile)){
		   if(@unlink($newfile)){
			   echo "파일이동에 실패하였습니다.";
			   }
			   }
			    }
				} 
/***********************************************************************************************************/

//////////////////////////  디렉터리 파일 목록 출력 /////////////////////////
$opendir=opendir("../board/bbs1/data");
$counts=1;
$ii=0;
while(false !==($readdir=readdir($opendir))){
if($readdir !="." && $readdir !=".."){
echo $counts." &nbsp; ".$readdir;
$counts++;
echo "<br>"; 
$ii++;
}
  }
 echo "<br>총파일 :". $ii;
  closedir($opendir);




//////////////////////////  디렉터리 파일 검색 //////////////////////////////
if(file_exists("../board/bbs1/data/ca070304_3041.jpg")){
  echo "파일이 존재합니다.";
} else{
  echo "파일이 없습니다.";
}



//////////////////////////////////////////////// text 파일 만들기 !! ////////////////////////////////////////
/////////////////////////////////////////////////   사용 예제  ////////////////////////////////////////////////
/*
 r    : 읽기 전용,   파일의 시작,  파일 내용 보존 // 파일이 존재 하지 않으면 NULL을 리턴
 r+  : 읽고 쓰기, 파일의 시작, 파일 내용 보존
 w   : 쓰기 전용,  파일의 시작,  파일 내용 삭제 없으면 새로 생성
 w+ : 읽고 쓰기,  파일의 시작,  파일 내용 삭제 없으면 새로 생성
 a   : 쓰기 전용, 파일의 끝,  파일 내용 보존 없으면 새로 생성
 a+ : 읽고 쓰기,  파일의 끝,  파일 내용 보존 없으면 새로 생성
 x   : 쓰기 전용,  새로운 파일 생성, 파일이 존재하면 false 리턴 그리고 에러 남 
 x+ :  읽고 쓰기, 새로운 파일 생성, 파일이 존재하면 false 리턴 그리고 에러 남  
************************************************************************************************/
$filename = "test.text";   //파일명을 생성한다.
$logfile= fopen($filename, "a");   // "a":쓰기전용/ 파일생성
$now=date("Y-m-d H:i"); // 글쓰는 시간을 저장하기 위해 현재시간을 변수에 넣는다.
fwrite($logfile, $now. "\r\n");  // 생성된 파일명에 위에 만들었던 시간을 저장한다.
fclose($logfile);  // 작업을 끝낸다.
//////////////////////////////////////////////// text 파일 만들기 (끝) !! ////////////////////////////////////////



//////////////////////////////////////////////// text 파일 수정하기 !! ////////////////////////////////////////
 // [is_writable] 파일 일기쓰기 권한 확인
 //[feof] 파일 포인터가 파일의 끝(EOF)에 도달했거나 에러가 발생하면 true, 아니면 false반환
//[fgets]  length-1byte만큼 읽어들이고 반환. 다 읽기전에 개행문자나 EOF를 만나면 읽기 중단 (한줄만 읽어옴)
////[substr]   0부터5까지의 길이값이 'POWER'단어와 같다면 POWER란 단어 뒤에 '='표기까지를 포함해
                  //그 후의 내용을 줄바꿈 되기 전까지 수정을 하고 줄바꿈을 한다. 
// [fwrite] 저장 할 내용
// [fread] 글자수  / 파라미터의 넣은 글자 수만 읽어 온다.
// [feof] 포인터가 파일의 마지막을 가릴킬때까지 계속 읽어 온다.

           ///////////////////////////////////////////  [ - 예제 - ] ////////////////////////////////////// 
 $filename = "./solve_1.php";   // 파일경로
    $name = $_POST['name']; //html 텍스트를 가져오기 post형식과 get으로 가져올수 있다.
    $index = 0;
    
    if (is_writable($filename)) { //파일 일기쓰기 권한 확인
    echo $filename.' // The file is writable'."<br>";
    } else {
    echo $filename.' // The file is not writable'."<br>";
    }
    
    $fp = fopen($filename, "r") or die("file open fail");     // 파일 오픈하여 읽어 드린다. or 파일 오픈 실패시 "file open fail" 띄운다.
    
    while(!feof($fp)){ //한문장 단위로 읽어 특정부분이 나오면 그 문장 수정
    $line = fgets($fp,1024);

	        if (substr($line,0,5) == "POWER"){
            $line="POWER=\"".$name.";\n"; 
            }
            
        $buffer .= $line;
    }
    

    $fw = fopen($filename, "w");
    fwrite ($fw, $buffer);
    
    fclose($fw);   // 오픈파일1 을 끝낸다
    fclose($fp);   // 오픈파일2 을 끝낸다
    
    echo "<br>";
    echo "---------------------Beacon Configure---------------------";
    
    $fr = fopen($filename, "r") or die("file open fail");   //파일을 연다 or 열기실패시 "file open fail" 메시지 출력

    while(!feof($fr)){         // 반복문을 이용해 파일의 내용을 문장의 레코드 수 만큼 출력한다.
        $read.= fread($fr,1024);
    }
    echo "<pre>".htmlspecialchars($read)."</pre>";  //html 형식으로 출력 
    echo "--------------------------------------------------------";
    echo "<br>";
    echo "<br>";
    
    fclose($fr);

?>



<!-----------------   실제 수정될 값을 전송한다. (예제)  ------------------>
<form name='form' method='post' action="test.php">
Beacon Configure <br/>
<br/>
POWER : <input type="text" name="name" id="name" >
<input type="submit" name="submit" value="apply">  
</form>
<?//////////////////////////////////////////////// text 파일 수정하기  (끝)!! ////////////////////////////////////////?>



<?
/* *************************** //////////////  문자열 치열 / 자르기  ////////////////   ****************************/
// substr : 문자의 바이트 만큼 자른다. ( (예) $data_Y = substr($data, 0, 4) ."-"; ) 
               //$data값이 123456790 이 있다면 위와 같이 코드를 적용한다면 "1234-"이런식으로 결과 값이 나타난다. 
// mb_substr : 문자 자리수 만큼 자른다.

//----------  strlen 문자열 길이 -------------
// 예) 
strlen("문자열");             //문자열을 길이를 나타낸다


//----------  substr -------------
// 예) 
substr($data['subject'],0,16);  // //문자열 자르기 한글 1자당  3byte 한글의 경우는 글씨가 바이트에 모잘라면 깨진다. 

//----------  mb_substr -------------
// 예)
$subject=mb_substr($data1[subject],0,55,'utf-8');  //문자 자리수 만큼 자른다.

//----------  mb_strcut -------------
// 예)
echo mb_strcut('가나다라마',0,3,'utf-8');   //문자열 자르기 한글 1자당  3byte


 strstr($subject,"자를위치문자"); //문자열 자르기(처음으로 나타나는 위치부터 끝까지 반환한다.)
 str_replace("변경대상","변경할문자",$subject); //특정 문자열 치환/변경 함수
/* *********************************************************************************************/


//////////////////////  [[[ preg_replace // preg_match ]]] ///////////////////////////
//  preg_replace: 특정문자열을 패턴을 이용해 제거 하는 함수이다.

// preg_replace :정규표현식 문자열 제거
//사용방법: preg_replace("찾을패턴","변경할패턴", 대상문자);  
//예)
$s1=preg_replace("/[a-z]/","",$a);  

//preg_match 정규식표현식 매치된 문자열 채크 
//사용방법: preg_replace("찾을패턴", 대상문자);  
$s1=preg_match("/[a-z]/",$a);  //
//(결과값은 true:1 false:0)

/* =============  정규표현식  문자열패턴 ==================
/[abc]/ a,b,c 중 한 문자라도 일차하는 것
/[a-z]/ 소문자 a부터 z까지 문자 중 한 문자와 일치
/[a-zA-Z]/ 소/대문자 a부터 z까지 문자 
/[^a-zA-Z]/ '^'기호가 있음으로 부정이 된다.
                 소/대문자 a부터 z까지 문자 
/[a-z+]/ +는 0번 이상 반본하는 것을 의미한다.
            한번도 일치하는게 없어도 된다는 의미.

---------아래는 복잡한 아스키코드를 사용하는 방법이다.----------------
iframe 제거
$STRING=preg_replace("!<iframe(.*?)<\/iframe>!is","",$STRING);

script 제거
$STRING=preg_replace("!<script(.*?)<\/script>!is","",$STRING);

meta 제거
$STRING=preg_replace("!<meta(.*?)>!is","",$STRING);

style 태그 제거
$STRING=preg_replace("!<style(.*?)<\/style>!is","",$STRING);

&nbsp;를 공백으로 변환
$STRING=str_replace("&nbsp;"," ",$STRING);

연속된 공백 1개로
$STRING=preg_replace("/\s{2,}/"," ",$STRING);

태그안에 style= 속성 제거
$STRING=preg_replace("/ style=([^\"\']+) /"," ",$STRING); // style=border:0... 따옴표가 없을때
$STRING=preg_replace("/ style=(\"|\')?([^\"\']+)(\"|\')?/","",$STRING); // style="border:0..." 따옴표 있을때

태그안의 width=, height= 속성 제거
$STRING=preg_replace("/ width=(\"|\')?\d+(\"|\')?/","",$STRING);
$STRING=preg_replace("/ height=(\"|\')?\d+(\"|\')?/","",$STRING);

img 태그 추출 src 추출
preg_match("/<img[^>]*src=[\"']?([^>\"']+)[\"']?[^>]*>/i",$STRING,$RESULT);
preg_match_all("/<img[^>]*src=[\"']?([^>\"']+)[\"']?[^>]*>/i",$STRING,$RESULT);
*****************************************************************************************************/


///////////////////////////////// [[[ 결 과 출 력 함 수 ]]] /////////////////////////////////
/* -------------  출력및 출력유형 --------------- */
- echo void타입 / (string text) HTML 결과에 text를 출력시킨다.
- print bool타입 / (string text)HTML 결과에 text를 출력시킨다.
- print_r :  결과를 text 출력시키거나 배열인 경우 객체의 속성을 확인할 수 있습니다.
- var_dump : 배열값이나 일반값의 타입, 객체의 속성값을 확인할 수 있습니다. 
 // var_dump 예)
    $a="우라나라 대한민국<br>아름 다운강산";
    var_dump  ("var_dump 결과 :".$a);
/*출력결과: string(65) "var_dump 결과 :우라나라 대한민국
              아름 다운강산"  */

//==  배경인 경우 ==/
   $a= array("a1"=>"토끼", "a2"=>"사자", "a3"=>"호랑이");
   //위와 처럼 배열에 넣고 아래와 처럼 출력해 보겠습니다.
print_r  ($a);  //  print_r 실행결과 보기
echo "<br>";
var_dump  ($a);  //  var_dump 실행결과 보기
/*print_r 실행결과:*/      Array ( [a1] => 토끼 [a2] => 사자 [a3] => 호랑이 ) 
/*var_dump 실행결과:*/ array(3) { ["a1"]=> string(6) "토끼" ["a2"]=> string(6) "사자" ["a3"]=> string(9) "호랑이" }
///////////////////////////////// [[[ 결 과 출 력 유 형 끝]]] /////////////////////////////////


///////////////////////////////// [[[ 여러 형태의  출력함수 ]]] /////////////////////////////////
- strtoupper(string str)  //모든 알파뱃을 대문자로
- strtolower(string str) //모든 알파뱃을 소문자로
- ltrim(string val) //좌측 공백 제거
- rtrim(string val)  //우측 공백 제거 ( chop 함수와 같은 함수 )
- trim(string val)  //좌우 공백 제거
- nl2br(string text) // \n을 <br/>로 바꿔준다.   //줄바꿈
- addslashes($변수); //홑/쌍따옴표,역슬래시를 허용
- number_format($변수) ;  //소수점(콤마) 찍기 함수  예) 123,456,789
- rand(1,9) : //랜덤으로 숫자 생성
- chr(rand(65,90)); // 랜덤으로 알파뱃 (대문자) 생성
- chr(rand(97,122));  // 랜덤으로 알파뱃 (소문자) 생성
- ceil : // 올림함수 
- getenv("REMOTE_ADDR");  //사용자의 IP를 나타낸다.
- htmlspecialchars()  //HTML태그로 보이기 
- htmlspecialchars_decode() //위와 반대로 HTML태그를 실행해서 보이기

//////////////////////////////// [[[ 여러 형태의  출력함수 끝]]] /////////////////////////////////


///////////////////////////////// [[[ 기타명령어 및 함수 ]]] /////////////////////////////////
ob_start();  //[출력버퍼]  쿠키 생성 작업중 헤더의 출력 위치 때문에 에러가 나는 경우가 있다.
                 // 이미 헤더 값이 출력된 상태에서 다시 쿠키를 헤더값에 넣어주려고 할 때 나는 오류를 해결하기 위해 
				 // ob_start(); 함수를 이용한다. 해당 함수는 출력 버퍼를 실행하는 함수로서 출력문이 있을대 마다 출력하지 않고
				 //버터에 저장 후 한번에 출력이 가능하게 해준다.

break // 루트탈출: 여러번 반복되는 for, foreach, while 등에 사용
// 예)
 for($i=0; $i<10; $i++){  // $i는 총 10인데 
	 if($i==5){               // 조건을 5까지만 출력하게 하고 break 줘서 작업을 멈추게 한다.
		 break;
	 }
	 echo $i;
  }
return //함수탈출 or 인클루드 탈출 : 함수안에 사용시 실행을 종료하고 호출했던 시점으로 돌아가서 계속 실행
          //함수 밖에서 쓰면 현재 파일을 인클루드 했던 파일로 돌아가서 계속 실행. 인클루드가 없다면 그냥 종료
exit, die :  // 현 시점부터 작업을 종료	



/* *************************** //////////////  연산자   ////////////////   ****************************/
/* /////////////////////////////////////////////////////////////////////////////
----- 비교연산자 ----
좌 > 우 : 좌항이 우항보다 크다 ;
좌 < 우 : 좌항이 우항보다 크다 ;
a >=b : a가 b보다 크거나 같다
a <=b : a가 b보다 작거나 같다
==     : 값이 서로 같다
!=      : 서로다르다.
===   : 값과 형식이 서로 같다.
!==    : 값과 형식이 서로 다르다.
= : 서로 대입한다. (대입연산자)


----- 상술연산자 ----
좌+우 : 좌와 우를 더한다.
좌-우 : 좌에서 우를 뺀다.
좌*우 : 좌에서 우를 곱한다.
좌 /우 : 좌에서 우를 나눈다.
좌&우 : 좌에서 우를 나눈 나머지
a**b : a의 b승(거듭제곱)
a ^ b : 산술기호 (제곱) : $a의 특정 비트와 $b의 특정 비트가 모두 1이거나 모두 0인경우 0
~a    : a의 비트가 0이면 1로, 1이면 0으로
$a%$b      :  a를 $b로 나누고 나머지값을 구한다.
$a %= $b :  (위와 같음)

----- 증가/감소 연산자 ----
++ : 증가하기     
--   : 감소하기



-----논리연산자-----
 and : $a and $b : a와 b가 모두 참인경우
  && : 둘다 참일경우
 or : $a or $b : a와 b중 하나라도 같은경우
 || : 한개라도 참이면 
xor : $a xor $b : a와 b중 단 하나만 참일경우 
 !    : 값이 거짓일경우

-  특수문자 -
 \n 개행문자(줄 바꿈)
  \r 캐리지리턴
  \\ 역슬러시
  \" 따옴표
  \$ 달러 표시
**************************/
 // ----------------- 지시 연산자 ----------------//
 //  => : 예) 
              $arrs= array( 'name' => "홍길동" );
              print_r($arrs['name']);

  // -> :   예) 
             class Main {
              var $name = '홍길동';
             }
            $my_main = new Main();
            echo $my_main->name;
/* /////////////////////////////////////////////////////////////////////////// */

/* ------------------------------------------------------------------------------
////// 데이터 타입 확인 함수 var_dump();   //////
// 참인경우(true)로 표기 되고 거짓인경우(false)표기된다.
-------------------------------------------------------------------------- */
var_dump( 1 > 2);  //1이 크다 (이건 거짓이 되겠죠)
echo "<br>";
var_dump( 3 < 4 );  //4가 커 (이건 참이됩니다.)
echo "<br>";
var_dump(1);  //숫자가 들어가있기 때문에 (int 1)형식이라 표기됩니다.
echo "<br>";
var_dump(hi); // 이건 텍스트가 들어갔기 때문에 string 형식 
echo "<br>";



 /* -------------------------- [[[ 상수 선언 ]]] -------------------------- */
/* 상수는 변하지 않는 값입니다
define(상수,값,대소문자구분)
true 를 넣게 되면 대소문자를 구분하지 않음
*/
//사용방법   define("상수명","상수에 저장될 값");

//(예제)
  define("ggg","사과 나무",true);
  define('Domain','http://'.$_SERVER['SERVER_NAME'],true);
  echo GgG;
  echo "<br>";
  echo Domain;


/////////////////////////////   [ isset, empty 체크하는 명령어 ]  /////////////////////////////
// - isset:    (선언이 되었다면  '1' (빈값도 포함)
// - empty :  (언이 되지 않았거나  빈값일때 '1' ) 

// 예)
$aa; 
 if(isset($aa)==true){
  echo "isset(1) : true"; //선언이 되었을때
  }else{ echo "isset(1) : false"; //선언이 되지않았을때 
  }
 
 echo "<br><br>";

  echo "isset(2) :". (isset($aa)); //선언이 되었다면  '1' (빈값도 포함)
 echo "<br><br>";

  echo "empty :". (empty($aa));  //선언이 되지 않았거나  빈값일때 '1'  





////////////   [ PHP 환경설정 보기 ] ////////////// 
//아래 예제와 같이 빈 파일에 아래 코드를 넣고 실행
 /* 예) */  phpinfo(); 

////////////   [ $_SERVER 약속변수 ] ////////////// 
$_SERVER['DOCUMENT_ROOT']  //사이트 루트의 물리적(서버) 경로. ex) /home/zeroth/www
$_SERVER['HTTP_HOST'] // 사이트 도매인 (Apache 서버네임)
$_SERVER['SERVER_NAME'] // 사이트 도매인 (Apache 에서 설정한 서버네임)
$_SERVER["SCRIPT_FILENAME"] //파일 전체경로
$_SERVER['REQUEST_URI'] // 현재페이지의 주소에서 도메인 제외 

$_SERVER['HTTP_USER_AGENT']  // 클라이언트 접속환경 정보
$_SERVER['REMOTE_ADDR'] //클라이언트 접속 IP
$_SERVER['SERVER_PROTOCOL']  // 사용된 서버 프로토콜. ex) HTTP/1.1
$_SERVER['REQUEST_URI'] // 현재페이지의 주소에서 도메인 제외
$_SERVER['PHP_SELF'] // 현재페이지의 주소
$_SERVER['SERVER_PORT']  //사이트가 사용하는 포트 => 80 
$_SERVER['SERVER_SOFTWARE']  //서버의 소프트웨어 환경 => 
              //Apache/1.3.23 (Unix) PHP/4.1.2 mod_fastcgi/2.2.10 mod_throttle/3.1.2 mod_ssl/2.8.6 OpenSSL/0.9.6c 

$_SERVER['REQUEST_URI'] // 호스트를 제외한 나머지 주소
$_SERVER['QUERY_STRING'] // 현재 페이지의 쿼리 스트링 값


  /*/////////////////////////////////// superglobals (전역변수)는 다음과 같다.  //////////////////////////////////////////////////
$GLOBALS : 함수나 메소드내에서 매개변수 과정없이 전역변수 $GLOBALS 선언으로 함수내에서 사용할 수 있습니다.
                    $GLOBALS로 정의돈 변수는 함수 밖에서도 사용할 수있다.
$_SERVER : 서버와 관련된 전역변수 
$_REQUEST : //전역변수(POST/GET 메소드의 데이터를 받아옴)
$_POST : POST형식의 메소드를 받아옴
$_GET : GET형식의 메소드를 받아옴 (보안의 취약)
$_FILES : 파일형식의 메소드를 받아옴
$_ENV :
$_COOKIE : 사용자가 원하는 값을 클라이언트에 유효시간동안 저장 
$_SESSION : 사용자가 원하는 값을 서버에 임시 저장
*/

/////////////////[[[[이미지 업로드 실행]]]]/////////////////
/////////// 확장자 검사 //////////////////////////////////////
/////////////////////((1번파일 업로드))//////////////////////
 if($file01){     
$file01 =  $_FILES['file01'];//업로드된파일
$img_ext = array('jpg', 'jpge','jpeg', 'gif', 'png');//파일확장자 종류
$file01_name = strtolower($file01['name']);
$file01_split = explode(".", $file01_name);
$file01_type = $file01_split[count($file01_split)-1];//맨마지막 .위치에 있는 것이 확장자명

//파일 확장자 체크
if ( array_search($file01_type, $img_ext) === false ) {  //이미지파일이 아닙니다
Error('이미지 파일이 아닙니다');
}
//////////////////아래는 허용되는 확장자 일때  //////////////////


/////////////////////////////[이미지 용량 제한]////////////////////////////////
$size_1=$_FILES['file01']['size'];
if($size_1>2097152)Error('파일용량: 2MB로 사이즈를 제한합니다. ');
////////////////////////////////////////////////////////////////////////////////  
/////////////////[[[[ 이미지 업로드 실행 (여기까지!!!! )]]]]/////////////////



/* //////////////[[[ 파일생성 (생성할 파일이름/생성할 값) ]]] /////////////////// */
        file_put_contents("ssum.txt", "안녕하세요.");  



//////////////////// [[[   파일 삭제 루틴 ]]]  //////////////////
     // 파일삭제루틴
  $del_file="./data/".$data[file01];
  if($data[file01] &&is_file($del_file)) unlink($del_file);
   // is_file : 파일을 선택한다.
   // unlink : 파일을 지운다.
   // && : file01 과 $del_file 있는 경우
 

  // //// 파일 삭제 선택시  이미지 삭제//////////
   if($file01_del){
  $del_file="./data/".$data[file01];
  if($data[file01] &&is_file($del_file)) unlink($del_file);
 }





////////////// [[[ 파일 업로드  ]]] ///////////////////
$dir="./data/";  // 업로드폴더 지정
$times=time();
$dates=date("mdh_i" ,$times);
if($_FILES['file01']['tmp_name']) {   // 임시파일이 있다면..

 $extvalue = explode(".",$_FILES['file01']['name']);   // . 을 기준으로 분리
 $extexplode=count($extvalue)-1;  // 확장자배열값
 $ext_result = $extvalue[$extexplode];  // 확장자 변수로 지정
 $newnamefile01=chr(rand(97,122)).chr(rand(97,122)).$dates.rand(1,9).rand(1,9).".".$ext_result;  // 새 파일명 생성
 move_uploaded_file($_FILES['file01']['tmp_name'],$dir.$newnamefile01);   // 업로드
 chmod($dir.$newnamefile01,0777);  // 업로드된 파일 퍼미션(chmod) 변경 
   //chmod(퍼미션은 해당디렉터리 파일들의 읽기/쓰기 권한을 말합니다. 777인경우 읽기/쓰기 모든권한 허용한다는 의미)
}

//////////////////////[[D B 저 장]]////////////////////////////////////
$file01_newnamefile=$newnamefile01;


if($file01){
$query_1 = "update bbs_1 set
               $temp
               file01='$file01_newnamefile'
               where b_ID='$b_ID' ";
       mysql_query("SET NAMES utf8", $connect);
        mysql_query($query_1, $connect);
}
////////////////////////////////////////////////////////////////////////////

}   ///////////////file01 있으면 실행 끝///////////////////////
///////////////////////////////////////////////////////////////////////////////

////////////////////////////////  include, include_once, require 페이지 호출   ///////////////////////////////////
/*
include : 자주 사용하는 코드를 계속 반복해서 사용하는 불편합을 해결하기 위해 파일을 그대로 불러오기 위한 명령어이다.
	          파일이 없거나 파일에 문제가 있는 경우 경고와 함께 파일이 실행된다.
include_once: 위와 비슷한 역활을 하지만 파일을 한반만 포함되도록 한다.
require : include와 사용방법이 똑같지만 파일이 없거나 파일의 문제가 있는경우 에러만 띄우고 php를 중단한다. require_once 포함
*/



/////////////////////////////////////////////////  [[[  이미지크지 리사이징  ]]] /////////////////////////////////////////////////
//  가로/세로 최대 비율을 1000px로 지정을 했으며
// 이미가 이 사이즈 보다 작을 경우 본 사이즈로 이미지가 적용이 되고 이 보다 클 경우 지정한 최대 비율로 적용된다.
$img_w = 1000;  //최대크기
$img_h = 1000;  //최대크기
$imgsize=GetImageSize("./data/$data[image]");
$img_width = $imgsize[0]; // 가로사이즈 선언
$img_height = $imgsize[1];                   // 세로사이즈 선언
if($img_width > $img_w){
$re_w_size = $img_w; // 가로사이즈가 지정사이즈보다 크면 지정사이즈로 고정
}else{
$re_w_size = $img_width; // 가로사이즈가 지정사이즈보다 작거나 같으면 기존사이즈 유지
}
if($img_height > $img_h){
$re_h_size = $img_h; // 세로사이즈가 지정사이즈보다 크면 지정사이즈로 고정
}else{
$re_h_size = $img_height; // 세로사이즈가 지정사이즈보다 작거나 같으면 기존사이즈 유지
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 


///////////////////////////////   [[[  PHP_SELF 자신의 페이지(현재 페이지) ]]]  ////////////////////////////////////////////////
$PHP_SELF  //현재페이지 을 가르킨다. or 
$_SERVER['PHP_SELF'] // 현재페이지 을 가르킨다


///////////////////////////////   [[[  기기접속모드 알아보기!! ]]]  ////////////////////////////////////////////////
function device_mode(){  
 $arr_mobile = array("Android","iPhone","iPod","IEMobile","Mobile","lgtelecom","PPC","Opera Mini","SymblanOS","Windows CE","BlackBerry","Nokia",
                            "SonyEricsson","web OS","PalmOS","LG","MOT","SAMSUNG","MeeGo");
    $user_agent=strtolower($_SERVER['HTTP_USER_AGENT']);  //클라이언트 접속환경 정보
    for($iex = 0 ; $iex < count($arr_mobile); $iex++) {
     if(preg_match("/$arr_mobile[$iex]/i",$user_agent)){
		 $device_mobile= "mobile";
	 }else{
		   $device_mobile= "PC";
	   }

return $device_mobile;
}
   }
echo device_mode();


/////////////////////////////////////////////  비밀번호 암호화 처리 ////////////////////////////////////////////////////
//암호화 처리는  mysql방식인 password, 그리고 md5, crypt, hash, password_hash 등등이 있습니다.
/*  md5사용방법은:  md5("변경할 비밀번호");
crypt사용방법은:  crypt("변경할 비밀번호","salt"); salt는 실제비밀번호 뒤에 추가로 덧붙이는 문자를 말합니다. 
사용예는 아래와 같습니다.*/
// md5 사용예)
$pw="123456"; //암호화할 비밀번호
print md5($pw);  // 암호된 비밀번호로 변경(32바이트)

// crypt 사용예)
$pw="123456"; //암호화할 비밀번호
$salt=md5(time());  // 사용자가 임으로 만듬
print crypt($pw, $salt);  // 암호된 비밀번호로 변경
// 해쉬결과는 매번 틀리게 나오지만 이렇게 해도 결과는 123456 이라는 비밀번호 가 암호가됩니다.

// hash 사용예)
echo "hash 암호화 방법<br>";
    $password = 'myPassword123!@#';
 echo   $encryption = hash('sha256', $password);


// hash salt 와 함께 암호화 하기   사용예)
echo "hash 암호화 방법(salt 와 함께 암호화 하기)<br>";
 # salt 와 함께 암호화 하기 (이 때 뒤에 붙는 salt 는 아무거나 해도 됩니다.)
   echo  $encrypt2 = hash('sha256', $password.'_donghoon_me');

// password_hash  사용예)
echo "password_hash 암호화 방법<br>";
$user_passwd="123456";
    $encrypted_passwd = password_hash($user_passwd, PASSWORD_DEFAULT);
     echo $encrypted_passwd;

//mysql password  사용예)
 $f1="select password('$a') as pw"
$ff = mysqli_query($connect,$f1);
$rt = mysqli_fetch_array($ff);
echo $rt['pw'];
//////////////////////  비밀번호 암호화 처리 (끝)  /////////////////////////

//////////////////////////////////////////////////////  [[[  메일보내기 ]]] /////////////////////////////////////////////////////////////
$email_title="테스트메일";  //이메일 제목
$email_content="내용1번";   //메일 본문1
$email_content.="내용2번";  //메일 본문2
$from_email='pjws0321@gmail.com'; //보내는 이메일
$from_name='쩡원'; //보내는사람 애칭(이름)  //적지않아도 됩니다.

$to_email="pjws0321@naver.com";  //받는사람 이메일
$to_name="홍길동"; //받는사람 애칭(이름) //적지않아도 됩니다.



  /////////////////////////////////////////////    메일 서버로 인해 메일보내기 ///////////////////////////////////////
$email_title = "=?UTF-8?B?".base64_encode($email_title)."?=";  //문자열을 base64_encode 처리
$from_name = "=?UTF-8?B?".base64_encode($from_name)."?="; //문자열을 base64_encode 처리
$to_name = "=?UTF-8?B?".base64_encode($to_name)."?=";  //문자열을 base64_encode 처리

 $headers = "Return-Path: <".$from_email.">\n";                 //리턴받을 이메일
 $headers .= "From: ".$from_name." <".$from_email.">\n";  //보내는 사람 이름/이메일
 $headers .= "X-Sender: <".$from_email.">\n";                    //에러발생시 받을 이메일
 $headers .= "X-Mailer: PHP\n";
 $headers .= "Reply-To: ".$from_name." <".$from_email.">\n";   //답장받을 메일 
 $headers .= "MIME-Version: 1.0\n";
 $headers .= "Content-Type: text/html;charset=utf-8\n";
$mails = @mail("$to_name <$to_email>",$email_title,$email_content,$headers);
if(!$mails)echo("<font color=red>ERROR : 전송실패</font>");
//////////////////////////////    메일 서버로 인해 메일보내기 (끝) //////////////////////////////////

//메일 서버가 없으면 메일을 위와 같이 보낼 수 없다.
// 그렇다면 자신이 사용하고 있는 타사 이메일로 접속하여 메일을 보내는 방법은 아래와 같다.
// 압축된 necessary_files폴더 안에 Mailer.zip 파일의 압축을 풀어서 사용되는 디렉터리에 'Mailer' 폴더를 추가한다.
// 아래코드는 실제 적용할 페이지에 넣는다.
  /////////////////////////////////////    외부 이메일 보내기 /////////////////////////////////
  // 타사 에메일 서버에 접속하여 보내는 코드는 매우 복잡하다.
  //그리고 하여 무료 배포 만들어진 코드를 이용해 사용해보자.

require_once("./Mailer/class.phpmailer.php");  // 자신의 환경 위치에 맞게 경로를 적어준다.
$mail = new PHPMailer(true); 
$mail->IsSMTP();
$mail-> CharSet="utf-8";     //언어셋 설정
$mail-> Encoding="base64"; //인코딩설정
$mail->Host = "smtp.gmail.com"; // (SMTP서버)email 보낼때 사용할 서버를 지정
$mail->SMTPAuth = true; // SMTP 인증을 사용함 true / false
$mail->SMTPDebug = 2;
$mail->Port = 587; // email 보낼때 사용할 포트를 지정//465(SSL)//   587(tls)
$mail->SMTPSecure = "tls"; // SSL인 경우 465 /587인경우 tls 를 사용
$mail->Username = "pjws0321@gmail.com"; // 사용할 계정
$mail->Password = "123456"; // 패스워드 (구글인경우 구글웹 비밀번호를 입력!)
$mail->SetFrom($from_email, $from_name); // 보내는 사람 email 주소와 표시될 이름 (표시될 이름은 생략가능)
$mail->AddAddress($to_email, $to_name); // 받을 사람 email 주소와 표시될 이름 (표시될 이름은 생략가능)
$mail->Subject = $email_title; // 메일 제목
$mail->Body = $email_content; // 메일 내용 (HTML 형식도 되고 그냥 일반 텍스트도 사용 가능함)
$mail->IsHTML(true); //HTML사용 여부
/////////////*PHP확장이 php_openssl.dll)설치가 안된경우 메일보내기가 안됨*////////////
 if(!$mail->Send()){
     echo "메일 전송에 실패 하였습니다.\n\n" .$mail->ErrorInfo;
 }
 else{
     echo "메일 전송에 성공 하였습니다.";
 }
    /////////////////////////////    외부 이메일 보내기 (끝) ////////////////////////////
///////////////////////////////////  [[[  메일보내기 (끝)  ]]]  //////////////////////////////////////////////
?>